--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: 
- !ruby/object:RI::MethodSummary 
  name: new
comment: 
- !ruby/struct:SM::Flow::P 
  body: This is just a trivial proxy class that is used to wrap a service before the interceptors are applied to it. This additional level of abstraction prevents the need for mangling the names of the service's methods, and also offers those applications that need it the ability to invoke methods of the service without going through the interceptors.
- !ruby/struct:SM::Flow::P 
  body: The proxy will be decorated with dynamically appended methods by the InterceptorChainBuilder#build method.
constants: []

full_name: Needle::InterceptorChainBuilder::InterceptedServiceProxy
includes: []

instance_methods: []

name: InterceptedServiceProxy
superclass: Object
