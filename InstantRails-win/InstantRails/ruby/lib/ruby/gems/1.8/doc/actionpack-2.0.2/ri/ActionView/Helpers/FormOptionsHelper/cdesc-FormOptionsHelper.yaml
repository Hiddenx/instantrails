--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: []

comment: 
- !ruby/struct:SM::Flow::P 
  body: Provides a number of methods for turning different kinds of containers into a set of option tags.
- !ruby/struct:SM::Flow::H 
  level: 2
  text: Options
- !ruby/struct:SM::Flow::P 
  body: The <tt>collection_select</tt>, <tt>country_select</tt>, <tt>select</tt>, and <tt>time_zone_select</tt> methods take an <tt>options</tt> parameter, a hash.
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: <tt>:include_blank</tt> - set to true or a prompt string if the first option element of the select element is a blank. Useful if there is not a default value required for the select element.
  type: :BULLET
- !ruby/struct:SM::Flow::P 
  body: For example,
- !ruby/struct:SM::Flow::VERB 
  body: "  select(&quot;post&quot;, &quot;category&quot;, Post::CATEGORIES, {:include_blank =&gt; true})\n"
- !ruby/struct:SM::Flow::P 
  body: "could become:"
- !ruby/struct:SM::Flow::VERB 
  body: "  &lt;select name=&quot;post[category]&quot;&gt;\n    &lt;option&gt;&lt;/option&gt;\n    &lt;option&gt;joke&lt;/option&gt;\n    &lt;option&gt;poem&lt;/option&gt;\n  &lt;/select&gt;\n"
- !ruby/struct:SM::Flow::P 
  body: Another common case is a select tag for an <tt>belongs_to</tt>-associated object.
- !ruby/struct:SM::Flow::P 
  body: "Example with @post.person_id =&gt; 2:"
- !ruby/struct:SM::Flow::VERB 
  body: "  select(&quot;post&quot;, &quot;person_id&quot;, Person.find(:all).collect {|p| [ p.name, p.id ] }, {:include_blank =&gt; 'None'})\n"
- !ruby/struct:SM::Flow::P 
  body: "could become:"
- !ruby/struct:SM::Flow::VERB 
  body: "  &lt;select name=&quot;post[person_id]&quot;&gt;\n    &lt;option value=&quot;&quot;&gt;None&lt;/option&gt;\n    &lt;option value=&quot;1&quot;&gt;David&lt;/option&gt;\n    &lt;option value=&quot;2&quot; selected=&quot;selected&quot;&gt;Sam&lt;/option&gt;\n    &lt;option value=&quot;3&quot;&gt;Tobias&lt;/option&gt;\n  &lt;/select&gt;\n"
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: <tt>:prompt</tt> - set to true or a prompt string. When the select element doesn't have a value yet, this prepends an option with a generic prompt -- &quot;Please select&quot; -- or the given prompt string.
  type: :BULLET
- !ruby/struct:SM::Flow::P 
  body: "Example:"
- !ruby/struct:SM::Flow::VERB 
  body: "  select(&quot;post&quot;, &quot;person_id&quot;, Person.find(:all).collect {|p| [ p.name, p.id ] }, {:prompt =&gt; 'Select Person'})\n"
- !ruby/struct:SM::Flow::P 
  body: "could become:"
- !ruby/struct:SM::Flow::VERB 
  body: "  &lt;select name=&quot;post[person_id]&quot;&gt;\n    &lt;option value=&quot;&quot;&gt;Select Person&lt;/option&gt;\n    &lt;option value=&quot;1&quot;&gt;David&lt;/option&gt;\n    &lt;option value=&quot;2&quot;&gt;Sam&lt;/option&gt;\n    &lt;option value=&quot;3&quot;&gt;Tobias&lt;/option&gt;\n  &lt;/select&gt;\n"
constants: 
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: All the countries included in the country_options output.
  name: COUNTRIES
  value: "[\"Afghanistan\", \"Aland Islands\", \"Albania\", \"Algeria\", \"American Samoa\", \"Andorra\", \"Angola\",           \"Anguilla\", \"Antarctica\", \"Antigua And Barbuda\", \"Argentina\", \"Armenia\", \"Aruba\", \"Australia\", \"Austria\",           \"Azerbaijan\", \"Bahamas\", \"Bahrain\", \"Bangladesh\", \"Barbados\", \"Belarus\", \"Belgium\", \"Belize\", \"Benin\",           \"Bermuda\", \"Bhutan\", \"Bolivia\", \"Bosnia and Herzegowina\", \"Botswana\", \"Bouvet Island\", \"Brazil\",           \"British Indian Ocean Territory\", \"Brunei Darussalam\", \"Bulgaria\", \"Burkina Faso\", \"Burundi\", \"Cambodia\",           \"Cameroon\", \"Canada\", \"Cape Verde\", \"Cayman Islands\", \"Central African Republic\", \"Chad\", \"Chile\", \"China\",           \"Christmas Island\", \"Cocos (Keeling) Islands\", \"Colombia\", \"Comoros\", \"Congo\",           \"Congo, the Democratic Republic of the\", \"Cook Islands\", \"Costa Rica\", \"Cote d'Ivoire\", \"Croatia\", \"Cuba\",           \"Cyprus\", \"Czech Republic\", \"Denmark\", \"Djibouti\", \"Dominica\", \"Dominican Republic\", \"Ecuador\", \"Egypt\",           \"El Salvador\", \"Equatorial Guinea\", \"Eritrea\", \"Estonia\", \"Ethiopia\", \"Falkland Islands (Malvinas)\",           \"Faroe Islands\", \"Fiji\", \"Finland\", \"France\", \"French Guiana\", \"French Polynesia\",           \"French Southern Territories\", \"Gabon\", \"Gambia\", \"Georgia\", \"Germany\", \"Ghana\", \"Gibraltar\", \"Greece\", \"Greenland\", \"Grenada\", \"Guadeloupe\", \"Guam\", \"Guatemala\", \"Guernsey\", \"Guinea\",           \"Guinea-Bissau\", \"Guyana\", \"Haiti\", \"Heard and McDonald Islands\", \"Holy See (Vatican City State)\",           \"Honduras\", \"Hong Kong\", \"Hungary\", \"Iceland\", \"India\", \"Indonesia\", \"Iran, Islamic Republic of\", \"Iraq\",           \"Ireland\", \"Isle of Man\", \"Israel\", \"Italy\", \"Jamaica\", \"Japan\", \"Jersey\", \"Jordan\", \"Kazakhstan\", \"Kenya\",           \"Kiribati\", \"Korea, Democratic People's Republic of\", \"Korea, Republic of\", \"Kuwait\", \"Kyrgyzstan\",           \"Lao People's Democratic Republic\", \"Latvia\", \"Lebanon\", \"Lesotho\", \"Liberia\", \"Libyan Arab Jamahiriya\",           \"Liechtenstein\", \"Lithuania\", \"Luxembourg\", \"Macao\", \"Macedonia, The Former Yugoslav Republic Of\",           \"Madagascar\", \"Malawi\", \"Malaysia\", \"Maldives\", \"Mali\", \"Malta\", \"Marshall Islands\", \"Martinique\",           \"Mauritania\", \"Mauritius\", \"Mayotte\", \"Mexico\", \"Micronesia, Federated States of\", \"Moldova, Republic of\",           \"Monaco\", \"Mongolia\", \"Montenegro\", \"Montserrat\", \"Morocco\", \"Mozambique\", \"Myanmar\", \"Namibia\", \"Nauru\",           \"Nepal\", \"Netherlands\", \"Netherlands Antilles\", \"New Caledonia\", \"New Zealand\", \"Nicaragua\", \"Niger\",           \"Nigeria\", \"Niue\", \"Norfolk Island\", \"Northern Mariana Islands\", \"Norway\", \"Oman\", \"Pakistan\", \"Palau\",           \"Palestinian Territory, Occupied\", \"Panama\", \"Papua New Guinea\", \"Paraguay\", \"Peru\", \"Philippines\",           \"Pitcairn\", \"Poland\", \"Portugal\", \"Puerto Rico\", \"Qatar\", \"Reunion\", \"Romania\", \"Russian Federation\",           \"Rwanda\", \"Saint Barthelemy\", \"Saint Helena\", \"Saint Kitts and Nevis\", \"Saint Lucia\",           \"Saint Pierre and Miquelon\", \"Saint Vincent and the Grenadines\", \"Samoa\", \"San Marino\",           \"Sao Tome and Principe\", \"Saudi Arabia\", \"Senegal\", \"Serbia\", \"Seychelles\", \"Sierra Leone\", \"Singapore\",           \"Slovakia\", \"Slovenia\", \"Solomon Islands\", \"Somalia\", \"South Africa\",           \"South Georgia and the South Sandwich Islands\", \"Spain\", \"Sri Lanka\", \"Sudan\", \"Suriname\",           \"Svalbard and Jan Mayen\", \"Swaziland\", \"Sweden\", \"Switzerland\", \"Syrian Arab Republic\",           \"Taiwan, Province of China\", \"Tajikistan\", \"Tanzania, United Republic of\", \"Thailand\", \"Timor-Leste\",           \"Togo\", \"Tokelau\", \"Tonga\", \"Trinidad and Tobago\", \"Tunisia\", \"Turkey\", \"Turkmenistan\",           \"Turks and Caicos Islands\", \"Tuvalu\", \"Uganda\", \"Ukraine\", \"United Arab Emirates\", \"United Kingdom\",           \"United States\", \"United States Minor Outlying Islands\", \"Uruguay\", \"Uzbekistan\", \"Vanuatu\", \"Venezuela\",           \"Viet Nam\", \"Virgin Islands, British\", \"Virgin Islands, U.S.\", \"Wallis and Futuna\", \"Western Sahara\",           \"Yemen\", \"Zambia\", \"Zimbabwe\"] unless const_defined?(\"COUNTRIES\")"
full_name: ActionView::Helpers::FormOptionsHelper
includes: 
- !ruby/object:RI::IncludedModule 
  name: ERB::Util
instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: collection_select
- !ruby/object:RI::MethodSummary 
  name: country_options_for_select
- !ruby/object:RI::MethodSummary 
  name: country_select
- !ruby/object:RI::MethodSummary 
  name: option_groups_from_collection_for_select
- !ruby/object:RI::MethodSummary 
  name: options_for_select
- !ruby/object:RI::MethodSummary 
  name: options_from_collection_for_select
- !ruby/object:RI::MethodSummary 
  name: select
- !ruby/object:RI::MethodSummary 
  name: time_zone_options_for_select
- !ruby/object:RI::MethodSummary 
  name: time_zone_select
name: FormOptionsHelper
superclass: 
