--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Adds the a reader and writer method for manipulating a value object, so <tt>composed_of :address</tt> would add <tt>address</tt> and <tt>address=(new_address)</tt>.
- !ruby/struct:SM::Flow::P 
  body: "Options are:"
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: <tt>:class_name</tt> - specify the class name of the association. Use it only if that name can't be inferred from the part id. So <tt>composed_of :address</tt> will by default be linked to the <tt>Address</tt> class, but if the real class name is <tt>CompanyAddress</tt>, you'll have to specify it with this option.
  - !ruby/struct:SM::Flow::LI 
    label: "*"
    body: <tt>:mapping</tt> - specifies a number of mapping arrays (attribute, parameter) that bind an attribute name to a constructor parameter on the value class.
  type: :BULLET
- !ruby/struct:SM::Flow::P 
  body: "Option examples:"
- !ruby/struct:SM::Flow::VERB 
  body: "  composed_of :temperature, :mapping =&gt; %w(reading celsius)\n  composed_of :balance, :class_name =&gt; &quot;Money&quot;, :mapping =&gt; %w(balance amount)\n  composed_of :address, :mapping =&gt; [ %w(address_street street), %w(address_city city) ]\n  composed_of :gps_location\n"
full_name: ActiveRecord::Aggregations::ClassMethods#composed_of
is_singleton: false
name: composed_of
params: (part_id, options = {})
visibility: public
