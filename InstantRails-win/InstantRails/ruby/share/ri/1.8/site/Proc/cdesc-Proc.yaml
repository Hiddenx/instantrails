--- !ruby/object:RI::ClassDescription 
attributes: []
class_methods: 
  - !ruby/object:RI::MethodSummary 
    name: new
comment: 
  - !ruby/struct:SM::Flow::P 
    body: "<tt>Proc</tt> objects are blocks of code that have been bound to a set of local
      variables. Once bound, the code may be called in different contexts and still
      access those variables."
  - !ruby/struct:SM::Flow::VERB 
    body: |2
         def gen_times(factor)
           return Proc.new {|n| n*factor }
         end

         times3 = gen_times(3)
         times5 = gen_times(5)

         times3.call(12)               #=&gt; 36
         times5.call(5)                #=&gt; 25
         times3.call(times5.call(4))   #=&gt; 60

constants: []
full_name: Proc
includes: []
instance_methods: 
  - !ruby/object:RI::MethodSummary 
    name: "=="
  - !ruby/object:RI::MethodSummary 
    name: "[]"
  - !ruby/object:RI::MethodSummary 
    name: arity
  - !ruby/object:RI::MethodSummary 
    name: binding
  - !ruby/object:RI::MethodSummary 
    name: call
  - !ruby/object:RI::MethodSummary 
    name: clone
  - !ruby/object:RI::MethodSummary 
    name: dup
  - !ruby/object:RI::MethodSummary 
    name: to_proc
  - !ruby/object:RI::MethodSummary 
    name: to_s
name: Proc
superclass: Object