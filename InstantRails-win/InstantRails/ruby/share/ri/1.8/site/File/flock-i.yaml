--- !ruby/object:RI::MethodDescription 
aliases: []
block_params: 
comment: 
  - !ruby/struct:SM::Flow::P 
    body: Locks or unlocks a file according to <em>locking_constant</em> (a logical <em>or</em> of the values in the table below). Returns <tt>false</tt> if <tt>File::LOCK_NB</tt> is specified and the operation would otherwise have blocked. Not available on all platforms.
  - !ruby/struct:SM::Flow::P 
    body: "Locking constants (in class File):"
  - !ruby/struct:SM::Flow::VERB 
    body: |2
         LOCK_EX   | Exclusive lock. Only one process may hold an
                   | exclusive lock for a given file at a time.
         ----------+------------------------------------------------
         LOCK_NB   | Don't block when locking. May be combined
                   | with other lock options using logical or.
         ----------+------------------------------------------------
         LOCK_SH   | Shared lock. Multiple processes may each hold a
                   | shared lock for a given file at the same time.
         ----------+------------------------------------------------
         LOCK_UN   | Unlock.

  - !ruby/struct:SM::Flow::P 
    body: "Example:"
  - !ruby/struct:SM::Flow::VERB 
    body: "   File.new(&quot;testfile&quot;).flock(File::LOCK_UN)   #=&gt; 0\n"
full_name: File#flock
is_singleton: false
name: flock
params: "file.flock (locking_constant ) =>  0 or false

  "
visibility: public