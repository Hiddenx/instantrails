--- !ruby/object:RI::MethodDescription 
aliases: []
block_params: 
comment: 
  - !ruby/struct:SM::Flow::P 
    body: "Calls the block once for each living, nonimmediate object in this Ruby process.
      If <em>module</em> is specified, calls the block for only those classes or
      modules that match (or are a subclass of) <em>module</em>. Returns the number of
      objects found. Immediate objects (<tt>Fixnum</tt>s, <tt>Symbol</tt>s
      <tt>true</tt>, <tt>false</tt>, and <tt>nil</tt>) are never returned. In the
      example below, <tt>each_object</tt> returns both the numbers we defined and
      several constants defined in the <tt>Math</tt> module."
  - !ruby/struct:SM::Flow::VERB 
    body: |2
         a = 102.7
         b = 95       # Won't be returned
         c = 12345678987654321
         count = ObjectSpace.each_object(Numeric) {|x| p x }
         puts &quot;Total count: #{count}&quot;

  - !ruby/struct:SM::Flow::P 
    body: "<em>produces:</em>"
  - !ruby/struct:SM::Flow::VERB 
    body: |2
         12345678987654321
         102.7
         2.71828182845905
         3.14159265358979
         2.22044604925031e-16
         1.7976931348623157e+308
         2.2250738585072e-308
         Total count: 7

full_name: ObjectSpace#each_object
is_singleton: false
name: each_object
params: "ObjectSpace.each_object([module]) {|obj| ... } => fixnum

  "
visibility: public