--- !ruby/object:RI::ClassDescription 
attributes: []
class_methods: []
comment: 
  - !ruby/struct:SM::Flow::P 
    body: "Many operating systems allow signals to be sent to running processes. Some
      signals have a defined effect on the process, while others may be trapped at the
      code level and acted upon. For example, your process may trap the USR1 signal
      and use it to toggle debugging, and may use TERM to initiate a controlled
      shutdown."
  - !ruby/struct:SM::Flow::VERB 
    body: |2
          pid = fork do
            Signal.trap(&quot;USR1&quot;) do
              $debug = !$debug
              puts &quot;Debug now: #$debug&quot;
            end
            Signal.trap(&quot;TERM&quot;) do
              puts &quot;Terminating...&quot;
              shutdown()
            end
            # . . . do some work . . .
          end

          Process.detach(pid)

          # Controlling program:
          Process.kill(&quot;USR1&quot;, pid)
          # ...
          Process.kill(&quot;USR1&quot;, pid)
          # ...
          Process.kill(&quot;TERM&quot;, pid)

  - !ruby/struct:SM::Flow::P 
    body: "produces:"
  - !ruby/struct:SM::Flow::VERB 
    body: |2
          Debug now: true
          Debug now: false
         Terminating...

  - !ruby/struct:SM::Flow::P 
    body: The list of available signal names and their interpretation is system dependent. Signal delivery semantics may also vary between systems; in particular signal delivery may not always be reliable.
constants: []
full_name: Signal
includes: []
instance_methods: 
  - !ruby/object:RI::MethodSummary 
    name: list
  - !ruby/object:RI::MethodSummary 
    name: trap
name: Signal
superclass: 