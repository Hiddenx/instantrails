--- !ruby/object:RI::ClassDescription 
attributes: []
class_methods: []
comment: 
  - !ruby/struct:SM::Flow::P 
    body: "The <tt>Comparable</tt> mixin is used by classes whose objects may be ordered.
      The class must define the <tt>&lt;=&gt;</tt> operator, which compares the
      receiver against another object, returning -1, 0, or +1 depending on whether the
      receiver is less than, equal to, or greater than the other object.
      <tt>Comparable</tt> uses <tt>&lt;=&gt;</tt> to implement the conventional
      comparison operators (<tt>&lt;</tt>, <tt>&lt;=</tt>, <tt>==</tt>,
      <tt>&gt;=</tt>, and <tt>&gt;</tt>) and the method <tt>between?</tt>."
  - !ruby/struct:SM::Flow::VERB 
    body: |2
         class SizeMatters
           include Comparable
           attr :str
           def &lt;=&gt;(anOther)
             str.size &lt;=&gt; anOther.str.size
           end
           def initialize(str)
             @str = str
           end
           def inspect
             @str
           end
         end

         s1 = SizeMatters.new(&quot;Z&quot;)
         s2 = SizeMatters.new(&quot;YY&quot;)
         s3 = SizeMatters.new(&quot;XXX&quot;)
         s4 = SizeMatters.new(&quot;WWWW&quot;)
         s5 = SizeMatters.new(&quot;VVVVV&quot;)

         s1 &lt; s2                       #=&gt; true
         s4.between?(s1, s3)           #=&gt; false
         s4.between?(s3, s5)           #=&gt; true
         [ s3, s2, s5, s4, s1 ].sort   #=&gt; [Z, YY, XXX, WWWW, VVVVV]

constants: []
full_name: Comparable
includes: []
instance_methods: 
  - !ruby/object:RI::MethodSummary 
    name: "<"
  - !ruby/object:RI::MethodSummary 
    name: "<="
  - !ruby/object:RI::MethodSummary 
    name: "=="
  - !ruby/object:RI::MethodSummary 
    name: ">"
  - !ruby/object:RI::MethodSummary 
    name: ">="
  - !ruby/object:RI::MethodSummary 
    name: "between?"
name: Comparable
superclass: 