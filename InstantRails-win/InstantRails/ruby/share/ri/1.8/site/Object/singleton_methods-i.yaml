--- !ruby/object:RI::MethodDescription 
aliases: []
block_params: 
comment: 
  - !ruby/struct:SM::Flow::P 
    body: "Returns an array of the names of singleton methods for <em>obj</em>. If the
      optional <em>all</em> parameter is true, the list will include methods in
      modules included in <em>obj</em>."
  - !ruby/struct:SM::Flow::VERB 
    body: |2
         module Other
           def three() end
         end

         class Single
           def Single.four() end
         end

         a = Single.new

         def a.one()
         end

         class &lt;&lt; a
           include Other
           def two()
           end
         end

         Single.singleton_methods    #=&gt; [&quot;four&quot;]
         a.singleton_methods(false)  #=&gt; [&quot;two&quot;, &quot;one&quot;]
         a.singleton_methods         #=&gt; [&quot;two&quot;, &quot;one&quot;, &quot;three&quot;]

full_name: Object#singleton_methods
is_singleton: false
name: singleton_methods
params: "obj.singleton_methods(all=true)    => array

  "
visibility: public