--- !ruby/object:RI::ClassDescription 
attributes: []
class_methods: 
  - !ruby/object:RI::MethodSummary 
    name: new
comment: 
  - !ruby/struct:SM::Flow::P 
    body: Classes in Ruby are first-class objects---each is an instance of class <tt>Class</tt>.
  - !ruby/struct:SM::Flow::P 
    body: "When a new class is created (typically using <tt>class Name ... end</tt>), an
      object of type <tt>Class</tt> is created and assigned to a global constant
      (<tt>Name</tt> in this case). When <tt>Name.new</tt> is called to create a new
      object, the <tt>new</tt> method in <tt>Class</tt> is run by default. This can be
      demonstrated by overriding <tt>new</tt> in <tt>Class</tt>:"
  - !ruby/struct:SM::Flow::VERB 
    body: |2
         class Class
            alias oldNew  new
            def new(*args)
              print &quot;Creating a new &quot;, self.name, &quot;\n&quot;
              oldNew(*args)
            end
          end

          class Name
          end

          n = Name.new

  - !ruby/struct:SM::Flow::P 
    body: "<em>produces:</em>"
  - !ruby/struct:SM::Flow::VERB 
    body: "   Creating a new Name\n"
  - !ruby/struct:SM::Flow::P 
    body: "Classes, modules, and objects are interrelated. In the diagram that follows, the
      arrows represent inheritance, and the parentheses meta-classes. All metaclasses
      are instances of the class `Class'."
  - !ruby/struct:SM::Flow::VERB 
    body: |2
                                +------------------+
                                |                  |
                  Object----&gt;(Object)              |
                   ^  ^        ^  ^                |
                   |  |        |  |                |
                   |  |  +-----+  +---------+      |
                   |  |  |                  |      |
                   |  +-----------+         |      |
                   |     |        |         |      |
            +------+     |     Module---&gt;(Module)  |
            |            |        ^         ^      |
       OtherClass--&gt;(OtherClass)  |         |      |
                                  |         |      |
                                Class----&gt;(Class)  |
                                  ^                |
                                  |                |
                                  +----------------+

constants: []
full_name: Class
includes: []
instance_methods: 
  - !ruby/object:RI::MethodSummary 
    name: allocate
  - !ruby/object:RI::MethodSummary 
    name: inherited
  - !ruby/object:RI::MethodSummary 
    name: initialize_copy
  - !ruby/object:RI::MethodSummary 
    name: new
  - !ruby/object:RI::MethodSummary 
    name: superclass
name: Class
superclass: Module