--- !ruby/object:RI::MethodDescription 
aliases: []
block_params: 
comment: 
  - !ruby/struct:SM::Flow::P 
    body: "Invoked by Ruby when <em>obj</em> is sent a message it cannot handle.
      <em>symbol</em> is the symbol for the method called, and <em>args</em> are any
      arguments that were passed to it. By default, the interpreter raises an error
      when this method is called. However, it is possible to override the method to
      provide more dynamic behavior. The example below creates a class <tt>Roman</tt>,
      which responds to methods with names consisting of roman numerals, returning the
      corresponding integer values."
  - !ruby/struct:SM::Flow::VERB 
    body: |2
         class Roman
           def romanToInt(str)
             # ...
           end
           def method_missing(methId)
             str = methId.id2name
             romanToInt(str)
           end
         end

         r = Roman.new
         r.iv      #=&gt; 4
         r.xxiii   #=&gt; 23
         r.mm      #=&gt; 2000

full_name: Kernel#method_missing
is_singleton: false
name: method_missing
params: "obj.method_missing(symbol [, *args] )   => result

  "
visibility: public