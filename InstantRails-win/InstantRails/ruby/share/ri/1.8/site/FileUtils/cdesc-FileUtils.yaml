--- !ruby/object:RI::ClassDescription 
attributes: []
class_methods: []
comment: 
  - !ruby/struct:SM::Flow::H 
    level: 1
    text: 
      - fileutils.rb
  - !ruby/struct:SM::Flow::P 
    body: Copyright (c) 2000-2004 Minero Aoki &lt;aamine@loveruby.net&gt;
  - !ruby/struct:SM::Flow::P 
    body: This program is free software. You can distribute/modify this program under the same terms of ruby.
  - !ruby/struct:SM::Flow::H 
    level: 2
    text: 
      - module FileUtils
  - !ruby/struct:SM::Flow::P 
    body: "Namespace for several file utility methods for copying, moving, removing, etc."
  - !ruby/struct:SM::Flow::H 
    level: 3
    text: 
      - Module Functions
  - !ruby/struct:SM::Flow::VERB 
    body: |2
        cd(dir, options)
        cd(dir, options) {|dir| .... }
        pwd()
        mkdir(dir, options)
        mkdir_p(dir, options)
        rmdir(dir, options)
        ln(old, new, options)
        ln(list, destdir, options)
        ln_s(old, new, options)
        ln_s(list, destdir, options)
        ln_sf(src, dest, options)
        cp(src, dest, options)
        cp(list, dir, options)
        cp_r(src, dest, options)
        cp_r(list, dir, options)
        mv(src, dest, options)
        mv(list, dir, options)
        rm(list, options)
        rm_r(list, options)
        rm_rf(list, options)
        install(src, dest, mode = &lt;src's&gt;, options)
        chmod(mode, list, options)
        touch(list, options)

  - !ruby/struct:SM::Flow::P 
    body: "The <tt>options</tt> parameter is a hash of options, taken from the list
      <tt>:force</tt>, <tt>:noop</tt>, <tt>:preserve</tt>, and <tt>:verbose</tt>.
      <tt>:noop</tt> means that no changes are made. The other two are obvious. Each
      method documents the options that it honours."
  - !ruby/struct:SM::Flow::P 
    body: All methods that have the concept of a &quot;source&quot; file or directory can take either one file or a list of files in that argument. See the method documentation for examples.
  - !ruby/struct:SM::Flow::P 
    body: "There are some `low level' methods, which does not accept any option:"
  - !ruby/struct:SM::Flow::VERB 
    body: |2
        uptodate?(file, cmp_list)
        copy_entry(src, dest, preserve = false, dereference = false)
        copy_file(src, dest, preserve = false, dereference = true)
        copy_stream(srcstream, deststream)
        compare_file(path_a, path_b)
        compare_stream(stream_a, stream_b)

  - !ruby/struct:SM::Flow::H 
    level: 2
    text: 
      - module FileUtils::Verbose
  - !ruby/struct:SM::Flow::P 
    body: "This module has all methods of FileUtils module, but it outputs messages before
      acting. This equates to passing the <tt>:verbose</tt> flag to methods in
      FileUtils."
  - !ruby/struct:SM::Flow::H 
    level: 2
    text: 
      - module FileUtils::NoWrite
  - !ruby/struct:SM::Flow::P 
    body: "This module has all methods of FileUtils module, but never changes
      files/directories. This equates to passing the <tt>:noop</tt> flag to methods in
      FileUtils."
  - !ruby/struct:SM::Flow::H 
    level: 2
    text: 
      - module FileUtils::DryRun
  - !ruby/struct:SM::Flow::P 
    body: "This module has all methods of FileUtils module, but never changes
      files/directories. This equates to passing the <tt>:noop</tt> and
      <tt>:verbose</tt> flags to methods in FileUtils."
constants: 
  - !ruby/object:RI::Constant 
    comment: 
    name: OPT_TABLE
    value: "{     'cd'           => %w( noop verbose ),     'chdir'        => %w( noop
      verbose ),     'chmod'        => %w( noop verbose ),     'copy'         => %w(
      noop verbose preserve ),     'cp'           => %w( noop verbose preserve ),    
      'cp_r'         => %w( noop verbose preserve ),     'install'      => %w( noop
      verbose preserve mode ),     'link'         => %w( noop verbose force ),    
      'ln'           => %w( noop verbose force ),     'ln_s'         => %w( noop
      verbose force ),     'ln_sf'        => %w( noop verbose ),     'makedirs'     =>
      %w( noop verbose ),     'mkdir'        => %w( noop verbose mode ),     'mkdir_p'
      => %w( noop verbose mode ),     'mkpath'       => %w( noop verbose ),     'move'
      => %w( noop verbose force ),     'mv'           => %w( noop verbose force ),    
      'remove'       => %w( noop verbose force ),     'rm'           => %w( noop
      verbose force ),     'rm_f'         => %w( noop verbose ),     'rm_r'         =>
      %w( noop verbose force ),     'rm_rf'        => %w( noop verbose ),     'rmtree'
      => %w( noop verbose ),     'rmdir'        => %w( noop verbose ),    
      'safe_unlink'  => %w( noop verbose ),     'symlink'      => %w( noop verbose
      force ),     'touch'        => %w( noop verbose )"
full_name: FileUtils
includes: []
instance_methods: 
  - !ruby/object:RI::MethodSummary 
    name: cd
  - !ruby/object:RI::MethodSummary 
    name: chdir
  - !ruby/object:RI::MethodSummary 
    name: chmod
  - !ruby/object:RI::MethodSummary 
    name: cmp
  - !ruby/object:RI::MethodSummary 
    name: compare_file
  - !ruby/object:RI::MethodSummary 
    name: compare_stream
  - !ruby/object:RI::MethodSummary 
    name: copy
  - !ruby/object:RI::MethodSummary 
    name: copy_entry
  - !ruby/object:RI::MethodSummary 
    name: copy_file
  - !ruby/object:RI::MethodSummary 
    name: copy_stream
  - !ruby/object:RI::MethodSummary 
    name: cp
  - !ruby/object:RI::MethodSummary 
    name: cp_r
  - !ruby/object:RI::MethodSummary 
    name: getwd
  - !ruby/object:RI::MethodSummary 
    name: "identical?"
  - !ruby/object:RI::MethodSummary 
    name: install
  - !ruby/object:RI::MethodSummary 
    name: link
  - !ruby/object:RI::MethodSummary 
    name: ln
  - !ruby/object:RI::MethodSummary 
    name: ln_s
  - !ruby/object:RI::MethodSummary 
    name: ln_sf
  - !ruby/object:RI::MethodSummary 
    name: makedirs
  - !ruby/object:RI::MethodSummary 
    name: mkdir
  - !ruby/object:RI::MethodSummary 
    name: mkdir_p
  - !ruby/object:RI::MethodSummary 
    name: mkpath
  - !ruby/object:RI::MethodSummary 
    name: move
  - !ruby/object:RI::MethodSummary 
    name: mv
  - !ruby/object:RI::MethodSummary 
    name: pwd
  - !ruby/object:RI::MethodSummary 
    name: remove
  - !ruby/object:RI::MethodSummary 
    name: rm
  - !ruby/object:RI::MethodSummary 
    name: rm_f
  - !ruby/object:RI::MethodSummary 
    name: rm_r
  - !ruby/object:RI::MethodSummary 
    name: rm_rf
  - !ruby/object:RI::MethodSummary 
    name: rmdir
  - !ruby/object:RI::MethodSummary 
    name: rmtree
  - !ruby/object:RI::MethodSummary 
    name: safe_unlink
  - !ruby/object:RI::MethodSummary 
    name: symlink
  - !ruby/object:RI::MethodSummary 
    name: touch
  - !ruby/object:RI::MethodSummary 
    name: "uptodate?"
name: FileUtils
superclass: 