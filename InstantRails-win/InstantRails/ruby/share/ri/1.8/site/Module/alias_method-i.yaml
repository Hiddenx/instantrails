--- !ruby/object:RI::MethodDescription 
aliases: []
block_params: 
comment: 
  - !ruby/struct:SM::Flow::P 
    body: Makes <em>new_name</em> a new copy of the method <em>old_name</em>. This can be used to retain access to methods that are overridden.
  - !ruby/struct:SM::Flow::VERB 
    body: |2
         module Mod
           alias_method :orig_exit, :exit
           def exit(code=0)
             puts &quot;Exiting with code #{code}&quot;
             orig_exit(code)
           end
         end
         include Mod
         exit(99)

  - !ruby/struct:SM::Flow::P 
    body: "<em>produces:</em>"
  - !ruby/struct:SM::Flow::VERB 
    body: "   Exiting with code 99\n"
full_name: Module#alias_method
is_singleton: false
name: alias_method
params: "alias_method(new_name, old_name)   => self

  "
visibility: public