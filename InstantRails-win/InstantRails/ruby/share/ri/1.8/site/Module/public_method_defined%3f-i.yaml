--- !ruby/object:RI::MethodDescription 
aliases: []
block_params: 
comment: 
  - !ruby/struct:SM::Flow::P 
    body: "Returns <tt>true</tt> if the named public method is defined by <em>mod</em> (or
      its included modules and, if <em>mod</em> is a class, its ancestors)."
  - !ruby/struct:SM::Flow::VERB 
    body: |2
         module A
           def method1()  end
         end
         class B
           protected
           def method2()  end
         end
         class C &lt; B
           include A
           def method3()  end
         end

         A.method_defined? :method1           #=&gt; true
         C.public_method_defined? &quot;method1&quot;   #=&gt; true
         C.public_method_defined? &quot;method2&quot;   #=&gt; false
         C.method_defined? &quot;method2&quot;          #=&gt; true

full_name: "Module#public_method_defined?"
is_singleton: false
name: "public_method_defined?"
params: "mod.public_method_defined?(symbol)   => true or false

  "
visibility: public