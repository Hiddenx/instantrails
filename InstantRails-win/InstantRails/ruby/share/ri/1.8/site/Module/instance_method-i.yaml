--- !ruby/object:RI::MethodDescription 
aliases: []
block_params: 
comment: 
  - !ruby/struct:SM::Flow::P 
    body: Returns an <tt>UnboundMethod</tt> representing the given instance method in <em>mod</em>.
  - !ruby/struct:SM::Flow::VERB 
    body: |2
         class Interpreter
           def do_a() print &quot;there, &quot;; end
           def do_d() print &quot;Hello &quot;;  end
           def do_e() print &quot;!\n&quot;;     end
           def do_v() print &quot;Dave&quot;;    end
           Dispatcher = {
            ?a =&gt; instance_method(:do_a),
            ?d =&gt; instance_method(:do_d),
            ?e =&gt; instance_method(:do_e),
            ?v =&gt; instance_method(:do_v)
           }
           def interpret(string)
             string.each_byte {|b| Dispatcher[b].bind(self).call }
           end
         end

         interpreter = Interpreter.new
         interpreter.interpret('dave')

  - !ruby/struct:SM::Flow::P 
    body: "<em>produces:</em>"
  - !ruby/struct:SM::Flow::VERB 
    body: "   Hello there, Dave!\n"
full_name: Module#instance_method
is_singleton: false
name: instance_method
params: "mod.instance_method(symbol)   => unbound_method

  "
visibility: public