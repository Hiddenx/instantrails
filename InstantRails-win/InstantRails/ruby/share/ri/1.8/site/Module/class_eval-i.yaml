--- !ruby/object:RI::MethodDescription 
aliases: []
block_params: 
comment: 
  - !ruby/struct:SM::Flow::P 
    body: Evaluates the string or block in the context of <em>mod</em>. This can be used to add methods to a class. <tt>module_eval</tt> returns the result of evaluating its argument. The optional <em>filename</em> and <em>lineno</em> parameters set the text for error messages.
  - !ruby/struct:SM::Flow::VERB 
    body: |2
         class Thing
         end
         a = %q{def hello() &quot;Hello there!&quot; end}
         Thing.module_eval(a)
         puts Thing.new.hello()
         Thing.module_eval(&quot;invalid code&quot;, &quot;dummy&quot;, 123)

  - !ruby/struct:SM::Flow::P 
    body: "<em>produces:</em>"
  - !ruby/struct:SM::Flow::VERB 
    body: |2
         Hello there!
         dummy:123:in `module_eval': undefined local variable
             or method `code' for Thing:Class

full_name: Module#class_eval
is_singleton: false
name: class_eval
params: >
  mod.class_eval(string [, filename [, lineno]])  => obj

  mod.module_eval {|| block }                     => obj

visibility: public