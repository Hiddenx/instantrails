--- !ruby/object:RI::MethodDescription 
aliases: []
block_params: 
comment: 
  - !ruby/struct:SM::Flow::P 
    body: "Extends the specified object by adding this module's constants and methods
      (which are added as singleton methods). This is the callback method used by
      <tt>Object#extend</tt>."
  - !ruby/struct:SM::Flow::VERB 
    body: |2
         module Picky
           def Picky.extend_object(o)
             if String === o
               puts &quot;Can't add Picky to a String&quot;
             else
               puts &quot;Picky added to #{o.class}&quot;
               super
             end
           end
         end
         (s = Array.new).extend Picky  # Call Object.extend
         (s = &quot;quick brown fox&quot;).extend Picky

  - !ruby/struct:SM::Flow::P 
    body: "<em>produces:</em>"
  - !ruby/struct:SM::Flow::VERB 
    body: |2
         Picky added to Array
         Can't add Picky to a String

full_name: Module#extend_object
is_singleton: false
name: extend_object
params: "extend_object(obj)    => obj

  "
visibility: public