--- !ruby/object:RI::MethodDescription 
aliases: []
block_params: 
comment: 
  - !ruby/struct:SM::Flow::P 
    body: "Returns an array containing the names of public instance methods in the
      receiver. For a module, these are the public methods; for a class, they are the
      instance (not singleton) methods. With no argument, or with an argument that is
      <tt>false</tt>, the instance methods in <em>mod</em> are returned, otherwise the
      methods in <em>mod</em> and <em>mod</em>'s superclasses are returned."
  - !ruby/struct:SM::Flow::VERB 
    body: |2
         module A
           def method1()  end
         end
         class B
           def method2()  end
         end
         class C &lt; B
           def method3()  end
         end

         A.instance_methods                #=&gt; [&quot;method1&quot;]
         B.instance_methods(false)         #=&gt; [&quot;method2&quot;]
         C.instance_methods(false)         #=&gt; [&quot;method3&quot;]
         C.instance_methods(true).length   #=&gt; 43

full_name: Module#instance_methods
is_singleton: false
name: instance_methods
params: "mod.instance_methods(include_super=true)   => array

  "
visibility: public